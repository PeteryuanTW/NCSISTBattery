@rendermode InteractiveServer
@inject DataService dataService

<div class="w-100 h-100 rounded border @(BorderColorCss)" @onclick="SelectClick">
    <DxGridLayout>
        <Rows>
            <DxGridLayoutRow Height="8fr" Areas="name"></DxGridLayoutRow>
            <DxGridLayoutRow Height="4fr" Areas="btn"></DxGridLayoutRow>
        </Rows>
        <Columns>
            <DxGridLayoutColumn Width="12fr"></DxGridLayoutColumn>
        </Columns>
        <Items>
            <DxGridLayoutItem Area="name">
                <Template>
                    <div class="d-flex justify-content-center align-items-center h-100 fs-3 @(TextColorCss)">
                        @($"{JigParameter.Name}({material})")
                    </div>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Area="btn">
                <Template>
                    <div class="d-flex justify-content-center align-items-center">
                        <DxButton Click="InfoBtnClick" IconCssClass="bi bi-info-lg" RenderStyle="@infoBtnStyle" Visible="@IsSelected" RenderStyleMode="ButtonRenderStyleMode.Outline"></DxButton>
                    </div>
                </Template>
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
</div>
@code {
    [Parameter]
    public Jig JigParameter { get; set; } = null!;
    [Parameter]
    public bool IsSelected { get; set; }
    private ButtonRenderStyle infoBtnStyle => IsSelected ? ButtonRenderStyle.Info : ButtonRenderStyle.Secondary;
    private string BorderColorCss => IsSelected ? "border-info" : "border-white";
    private string TextColorCss => IsSelected ? "text-info" : "text-white";

    [Parameter]
    public EventCallback<Guid> SelectClickCB { get; set; }
    [Parameter]
    public EventCallback InfoClickCB { get; set; }

    private string material = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetMaterialByCode();
        await base.OnInitializedAsync();
    }

    private async Task GetMaterialByCode()
    {
        if (JigParameter.MaterialTypeCode is 0)
        {
            material = "通用";
            return;
        }
        var target = await dataService.GetMaterialByCode(JigParameter.MaterialTypeCode);
        material = target is not null ? target.Name : "未定義";
    }

    private async Task SelectClick()
    {
        await SelectClickCB.InvokeAsync(JigParameter.Id);
    }

    private async Task InfoBtnClick()
    {
        await InfoClickCB.InvokeAsync();
    }
}