@page "/"
@rendermode InteractiveServer

<DxLoadingPanel @bind-Visible="isCalculating"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Calculating Data...">
    <DxGridLayout>
        <Rows>
            <DxGridLayoutRow Height="1fr" />
            <DxGridLayoutRow Height="10fr" />
        </Rows>
        <Columns>
            <DxGridLayoutColumn Width="12fr" />
        </Columns>
        <Items>
            <DxGridLayoutItem Row="0" Column="0">
                <Template>
                    <DxToolbar Title="@(dataService.CurrentRecipe?.Name)">
                        <Items>
                            <DxToolbarItem BeginGroup="true" IconCssClass="oi oi-random"/>
@*                             <DxToolbarItem BeginGroup="true" Tooltip="上傳" RenderStyle="ButtonRenderStyle.Info" IconCssClass="oi oi-cloud-upload" Id="dataimport" />
 *@                            <DxToolbarItem BeginGroup="true" Tooltip="切換配方" Click="@ShowRecipeSelectPopup" RenderStyle="ButtonRenderStyle.Primary" IconCssClass="oi oi-loop-circular" />
                            <DxToolbarItem BeginGroup="true" Tooltip="模擬預算" Click="@StartCalculating" RenderStyle="ButtonRenderStyle.Warning" IconCssClass="oi oi-calculator" />
                        </Items>
                    </DxToolbar>
                </Template>
            </DxGridLayoutItem>
            <DxGridLayoutItem Row="1" Column="1">
                @* <Template>
                    <DxSplitter CssClass="card h-100 w-100" Orientation="Orientation.Vertical">
                        <Panes>
                            <DxSplitterPane Size="60%" AllowCollapse="true">
                                <DxSplitter Orientation="Orientation.Horizontal">
                                    <Panes>
                                        <DxSplitterPane AllowCollapse="true">
                                            <DxStackLayout Orientation="Orientation.Vertical">
                                                <Items>
                                                    <DxStackLayoutItem Length="1fr">
                                                        <Template>
                                                            <DxTabs @bind-ActiveTabIndex="@startTabOndex">
                                                                <DxTab Text="在製"></DxTab>
                                                                <DxTab Text="備援"></DxTab>
                                                            </DxTabs>
                                                        </Template>
                                                    </DxStackLayoutItem>
                                                    <DxStackLayoutItem Length="10fr">
                                                        <Template>
                                                            <div class="h-100">
                                                                <DxTabs CssClass="h-100" TabsPosition="TabsPosition.Bottom">
                                                                    @foreach (var destJig in StartJigDisplay)
                                                                    {
                                                                        <DxTabPage Text="@destJig.Name" CssClass="h-100">
                                                                            <div class="p-3 h-100">
                                                                                <JigComponemt JigParameter="@destJig" />
                                                                            </div>
                                                                        </DxTabPage>
                                                                    }
                                                                </DxTabs>
                                                            </div>
                                                            
                                                        </Template>
                                                    </DxStackLayoutItem>
                                                </Items>
                                            </DxStackLayout>
                                        </DxSplitterPane>
                                        <DxSplitterPane AllowCollapse="true">
                                            <DxTabs>
                                                @foreach (var destJig in DestJigs)
                                                {
                                                    <DxTabPage Text="@destJig.Name">
                                                        <div class="demo-carousel-content">
                                                            <JigComponemt JigParameter="@destJig" />
                                                        </div>
                                                    </DxTabPage>
                                                }
                                            </DxTabs>
                                        </DxSplitterPane>
                                    </Panes>
                                </DxSplitter>
                            </DxSplitterPane>
                            <DxSplitterPane Size="40%" AllowCollapse="true">
                                <CommandComponent />
                            </DxSplitterPane>
                        </Panes>
                    </DxSplitter>
                </Template> *@
            </DxGridLayoutItem>
        </Items>
    </DxGridLayout>
</DxLoadingPanel>
@* 
<DxFileInput ExternalSelectButtonCssSelector="#dataimport"
             MaxFileSize="15000000">
</DxFileInput> *@

<DxPopup @bind-Visible="@recipeSelectPopup" CloseOnOutsideClick="false" ShowHeader="true" ShowFooter="false" Width="50rem">
    <HeaderTemplate>
        <div class="w-100 p-3 border border-bottom">
            <DxToolbar>
                <Items>
                    <DxToolbarItem IconCssClass="oi oi-x" Click="CloseRecipeSelectPopup" RenderStyle="ButtonRenderStyle.Danger" BeginGroup="true" Alignment="ToolbarItemAlignment.Right" RenderStyleMode="ToolbarItemRenderStyleMode.Contained" />
                </Items>
            </DxToolbar>
        </div>
    </HeaderTemplate>
    <BodyContentTemplate Context="bodycontext">
        <DxFormLayout>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="配方選擇" ColSpanLg="12" BeginRow="true">
                <DxComboBox Data="@recipes" Value="@(dataService.CurrentRecipe)" ValueChanged="@((Recipe? r) => RecipeChanged(r))" TextFieldName="@nameof(Recipe.Name)" />
            </DxFormLayoutItem>
            <DxFormLayoutItem ColSpanLg="12">
                <hr />
            </DxFormLayoutItem>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" ColSpanLg="12">
                <DxToolbar>
                    <Items>
                        <DxToolbarItem IconCssClass="oi oi-check" SubmitFormOnClick="true" RenderStyle="ButtonRenderStyle.Primary" BeginGroup="true" Alignment="ToolbarItemAlignment.Right" RenderStyleMode="ToolbarItemRenderStyleMode.Contained" />
                    </Items>
                </DxToolbar>
            </DxFormLayoutItem>
        </DxFormLayout>
    </BodyContentTemplate>
</DxPopup>

<DxPopup @bind-Visible="@calculationPopup" CloseOnOutsideClick="false" ShowHeader="true" ShowFooter="false" Width="50rem">
    <HeaderTemplate>
        <div class="w-100 p-3 border border-bottom">
            <DxToolbar>
                <Items>
                    <DxToolbarItem IconCssClass="oi oi-x" Click="CloseCalculationPopup" RenderStyle="ButtonRenderStyle.Danger" BeginGroup="true" Alignment="ToolbarItemAlignment.Right" RenderStyleMode="ToolbarItemRenderStyleMode.Contained" />
                </Items>
            </DxToolbar>
        </div>
    </HeaderTemplate>
    <BodyContentTemplate Context="bodycontext">
        <DxFormLayout>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="耗時" ColSpanLg="6" BeginRow="true">
                <DxTextBox></DxTextBox>
            </DxFormLayoutItem>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="其他數值" ColSpanLg="6" BeginRow="true">
                <DxTextBox></DxTextBox>
            </DxFormLayoutItem>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="其他數值" ColSpanLg="6" BeginRow="true">
                <DxTextBox></DxTextBox>
            </DxFormLayoutItem>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="其他數值" ColSpanLg="6" BeginRow="true">
                <DxTextBox></DxTextBox>
            </DxFormLayoutItem>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" Caption="其他數值" ColSpanLg="6" BeginRow="true">
                <DxTextBox></DxTextBox>
            </DxFormLayoutItem>
            <DxFormLayoutItem ColSpanLg="12">
                <hr />
            </DxFormLayoutItem>
            <DxFormLayoutItem CaptionPosition="CaptionPosition.Vertical" ColSpanLg="12">
                <DxToolbar>
                    <Items>
                        <DxToolbarItem IconCssClass="oi oi-media-play" SubmitFormOnClick="true" RenderStyle="ButtonRenderStyle.Primary" BeginGroup="true" Alignment="ToolbarItemAlignment.Right" RenderStyleMode="ToolbarItemRenderStyleMode.Contained" />
                    </Items>
                </DxToolbar>
            </DxFormLayoutItem>
        </DxFormLayout>
    </BodyContentTemplate>
</DxPopup>

@code {
    private List<Jig> AllJigs = new();

    //private List<Jig> StartJigs => AllJigs.Where(x => !x.IsDestination).ToList();
    private int startTabOndex { get; set; }
    //private List<Jig> OnboardStartJigs => StartJigs.Where(x => x.IsOnBoard).ToList();
    //private List<Jig> CandidateStartJigs => StartJigs.Where(x => !x.IsOnBoard).ToList();
    // private List<Jig> StartJigDisplay => startTabOndex switch
    // {
    //     0 => OnboardStartJigs,
    //     1 => CandidateStartJigs,
    //     _ => new List<Jig> { },
    // };

    //private List<Jig> DestJigs => AllJigs.Where(x => x.IsDestination).ToList();

    private bool recipeSelectPopup = false;
    private void ShowRecipeSelectPopup() => recipeSelectPopup = true;
    private void CloseRecipeSelectPopup() => recipeSelectPopup = false;

    private bool calculationPopup = false;
    private void ShowCalculationPopup() => calculationPopup = true;
    private void CloseCalculationPopup() => calculationPopup = false;
    private bool isCalculating = false;

    private List<Recipe> recipes = new();

    protected override async Task OnInitializedAsync()
    {
        await UpdateJigs();
        await GetRecipe();
        dataService.JigChangedFunc += UpdateJigs;
        //return base.OnInitializedAsync();
    }

    private Task UpdateJigs()
    {
        //AllJigs = dataService.Jigs;
        return Task.CompletedTask;
    }

    private async Task GetRecipe()
    {
        recipes = await dataService.GetAllRecipes();
    }

    private void RecipeChanged(Recipe? recipe)
    {
        dataService.SetRecipe(recipe);
    }

    private async Task StartCalculating()
    {
        isCalculating = true;
        await Task.Delay(5000);
        isCalculating = false;
        ShowCalculationPopup();
    }
}